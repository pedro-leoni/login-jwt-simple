[{"F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\index.js":"1","F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\App.js":"2","F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Components\\CreateAccount\\CreateAccount.jsx":"3","F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Components\\Login\\Login.jsx":"4","F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Services\\createAccountService.js":"5","F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Services\\loginService.js":"6","F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Services\\getUserId.js":"7","F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Components\\Profile\\Profile.jsx":"8","F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Services\\getUserInfo.js":"9","F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Services\\apiAuth.js":"10","F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\ProtectedRoutes.jsx":"11"},{"size":477,"mtime":1658972266895,"results":"12","hashOfConfig":"13"},{"size":624,"mtime":1659039969243,"results":"14","hashOfConfig":"13"},{"size":5686,"mtime":1659052153146,"results":"15","hashOfConfig":"13"},{"size":2928,"mtime":1659046818714,"results":"16","hashOfConfig":"13"},{"size":290,"mtime":1659012170109,"results":"17","hashOfConfig":"13"},{"size":307,"mtime":1659013510341,"results":"18","hashOfConfig":"13"},{"size":519,"mtime":1659017068033,"results":"19","hashOfConfig":"13"},{"size":1353,"mtime":1659043530716,"results":"20","hashOfConfig":"13"},{"size":531,"mtime":1659019463224,"results":"21","hashOfConfig":"13"},{"size":426,"mtime":1659043872762,"results":"22","hashOfConfig":"13"},{"size":504,"mtime":1659043860546,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1qejhud",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\index.js",[],["49","50"],"F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\App.js",[],"F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Components\\CreateAccount\\CreateAccount.jsx",[],"F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Components\\Login\\Login.jsx",[],"F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Services\\createAccountService.js",[],"F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Services\\loginService.js",[],"F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Services\\getUserId.js",[],"F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Components\\Profile\\Profile.jsx",["51"],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport getUserInfo from \"../../Services/getUserInfo\";\r\n\r\n\r\nconst Profile = () => {\r\n  const navigate = useNavigate()\r\n  const [info, setInfo] = useState();\r\n  const token = localStorage.getItem(\"token\");\r\n  const {id } = useParams()\r\n  useEffect(() => {\r\n    getUserInfo(token, id).then((resp) => setInfo(resp));\r\n  }, []);\r\n\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    //agregar confirmacion con swal\r\n    Swal.fire({\r\n      background: \"#DFDCD3\",\r\n      icon: \"question\",\r\n      title: \"Are you sure?\",\r\n      showCancelButton: true,\r\n    }).then(()=>{\r\n      window.localStorage.removeItem(\"token\")\r\n      navigate('/')\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Welcome {info?.username}</h1>\r\n        <img src={info?.image} alt='profile'/>\r\n      </div>\r\n      <div>\r\n        <h2>Info</h2>\r\n        <table>\r\n          <ul>\r\n            <li>Firstname: {info?.name}</li>\r\n            <li>Lastname: {info?.lastname}</li>\r\n            <li>Email: {info?.email}</li>\r\n            <li>Phone: {info?.phone}</li>\r\n          </ul>\r\n        </table>\r\n        <button onClick={handleLogout}> Logout </button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Services\\getUserInfo.js",[],"F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\Services\\apiAuth.js",[],"F:\\backup\\Proyectos\\neuron-challenge\\challenge\\client\\src\\ProtectedRoutes.jsx",["52"],"import React, { useEffect, useState } from 'react'\r\nimport apiAuth from './Services/apiAuth';\r\n\r\nconst ProtectedRoutes = ({children }) => {\r\n  const token = localStorage.getItem(\"token\")\r\n  const [ auth, setAuth ] = useState(null)\r\n  const [ loading, setLoading ] = useState(true)\r\n  useEffect(()=>{\r\n    apiAuth(token).then((res)=>setAuth(res))\r\n    setLoading(false)\r\n  },[auth, token])\r\n  if(auth){\r\n    return children;\r\n  } else {\r\n    return <p>Cargando</p>\r\n  } \r\n}\r\nexport default ProtectedRoutes",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":14,"column":6,"nodeType":"59","endLine":14,"endColumn":8,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":7,"column":11,"nodeType":"63","messageId":"64","endLine":7,"endColumn":18},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["67"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [id, token]",{"range":"70","text":"71"},[465,467],"[id, token]"]